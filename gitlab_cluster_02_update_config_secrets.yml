---
#####################
# This playbook updates the main configuration file for gitlab (/etc/gitlab/gitlab.rb) on each host
# and it updates the /etc/gitlab/gitlab-secrets.json encryption key store from master copies on the 
# ansible controller.
# It checks the controller copy against the copy on each host. If either of these require updating, it 
# iterates through the cluster hosts such that each node becomes the primary node (i.e. mount the gitlab filesystem)
# and reconfigures.
#####################

- name: Update gitlab.rb and gitlab-secrets.json
  hosts: gitlab_cluster
  become: true
  tasks:
    
    - name: Update gitlab.rb on the cluster host
      vars:
        config_file: "templates/{{ gitlab_config_template }}"
      ansible.builtin.template:
        src: "{{ gitlab_config_template }}"
        dest: /etc/gitlab/gitlab.rb
        mode: '640'
        owner: root
      when: 
        - gitlab_config_template is defined
        - config_file is file
      register: gitlab_rb

    - name: Update gitlab-secrets.json on the cluster host
      vars:
        secrets_file: "files/{{ gitlab_secrets }}"
      ansible.builtin.copy:
        src: "{{ gitlab_secrets }}"
        dest: /etc/gitlab/gitlab-secrets.json
        mode: '600'
        owner: root
      when: 
        - gitlab_secrets is defined
        - secrets_file is file
      register: gitlab_secrets

- name: Iterate through hosts and reconfigure gitlab
  hosts: gitlab_cluster
  gather_facts: no
  serial: 1
  become: true
  tasks:

    - block:
      - name: Notify if play skipped
        ansible.builtin.debug:
          msg: "Skipping reconfigure as no changes to configuration or secrets"
    
      - name: Halt if no reconfigure required
        ansible.builtin.meta: end_play
      
      when: 
        - gitlab_rb is not changed 
        - gitlab_secrets is not changed
        
    - name: Stop the g-gitlab grouped cluster agents
      community.general.pacemaker_resource:
        name: g-gitlab
        state: disabled
      run_once: true
      register: g_gitlab_stopped

    - name: Become primary cluster node
      ansible.builtin.shell:
        cmd: "pcs resource move drbd-service-clone {{ inventory_hostname }}"
      register: become_primary
      failed_when: 
        - become_primary.rc > 0
        - '"Requested item already exists" not in become_primary.stderr'

    - name: Wait for the filesystem to be mounted
      ansible.builtin.wait_for:
        delay: 10
        path: /proc/mounts
        search_regex: /var/opt/gitlab       
        state: present 
        timeout: 120

    - name: Start the gitlab runsvdir service on the current host
      ansible.builtin.systemd_service:
        name: gitlab-runsvdir.service
        state: started
      
    - name: Stop the gitlab application
      ansible.builtin.shell:
        cmd: gitlab-ctl stop

    - name: Initiate reconfigure
      ansible.builtin.shell:
        cmd: gitlab-ctl reconfigure

    - name: Stop the gitlab runsvdir service on the current host
      ansible.builtin.systemd_service:
        name: gitlab-runsvdir.service
        state: stopped
  
- name: Restart gitlab service
  hosts: gitlab_cluster
  gather_facts: no
  become: true
  run_once: true
  tasks:
    
    - name: Restart g-gitlab cluster agents
      community.general.pacemaker_resource:
        name: g-gitlab
        state: enabled
      when: 
        - g_gitlab_stopped is defined
        - g_gitlab_stopped is changed
    
    - name: Remove location constraints
      ansible.builtin.shell:
        cmd: "pcs resource clear drbd-service-clone"
      when:
        - become_primary is defined
        - become_primary is changed



